env:
  MAVEN_OPTS: -Dmaven.resolver.transport=wagon -Dmaven.wagon.httpconnectionManager.ttlSeconds=30
jobs:
  build-backend:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        cache: maven
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      if: ${{matrix.spark == '2.4' && matrix.hadoop == '2.7'}}
      name: build spark ${{matrix.spark}} and hadoop ${{matrix.hadoop}}
      run: ./mvnw clean package -Pspark-${{matrix.spark}} -Phadoop-${{matrix.hadoop}}
        -Dmaven.test.skip=true
    - continue-on-error: true
      if: ${{matrix.spark == '3.2' && matrix.hadoop == '3.3'}}
      name: build spark ${{matrix.spark}} and hadoop ${{matrix.hadoop}}
      run: ./mvnw clean package
    - continue-on-error: true
      if: ${{matrix.spark == '3.2' && matrix.hadoop == '2.7'}}
      name: build spark ${{matrix.spark}} and hadoop ${{matrix.hadoop}}
      run: ./mvnw clean package -Phadoop-${{matrix.hadoop}} -Dmaven.test.skip=true
    - continue-on-error: true
      if: ${{matrix.spark == '2.4' && matrix.hadoop == '3.3'}}
      name: build spark ${{matrix.spark}} and hadoop ${{matrix.hadoop}}
      run: ./mvnw clean package -Pspark-${{matrix.spark}} -Dmaven.test.skip=true
    strategy:
      matrix:
        hadoop:
        - 2.7
        - 3.3
        spark:
        - 2.4
        - 3.2
  third-party-dependencies-check:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout source
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        cache: maven
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      name: mvn install
      run: ./mvnw install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true
    - continue-on-error: true
      name: mvn dependency:copy-dependencies
      run: ./mvnw dependency:copy-dependencies  -DexcludeGroupIds=org.apache.linkis
        -DincludeScope=runtime -DoutputDirectory=${{ github.workspace }}/current_dependencies
    - continue-on-error: true
      name: generate current_dependencies.txt
      run: 'ls ${{ github.workspace }}/current_dependencies | sort > ~/current_dependencies.txt

        cat ~/current_dependencies.txt

        '
    - continue-on-error: true
      name: check third dependencies
      run: "#by using commond join ,to check whether there are new third-party dependencies,compared\
        \ with file(tool/dependencies/known-dependencies.txt) \nsort ${{ github.workspace\
        \ }}/tool/dependencies/known-dependencies.txt > ~/known-dependencies.txt \n\
        join -t : -o 1.1 2.1 -a2 ~/known-dependencies.txt ~/current_dependencies.txt\
        \ > ~/result.txt\n#print new third-party dependencies name if it exists \n\
        awk -F \":\" '{if($1==\"\")print $2\" is not in file known-dependencies.txt!\\\
        n You can refer to this guide to repair it(\u4F60\u53EF\u4EE5\u53C2\u8003\u8FD9\
        \u4E2A\u6307\u5F15\u8FDB\u884C\u4FEE\u590D)\uFF1Ahttps://linkis.apache.org/zh-CN/docs/latest/development/development-specification/license\"\
        }' ~/result.txt\nresult=`awk -F \":\" '{if($1==\"\")print $2}'  ~/result.txt\
        \ |wc -l`\n#if has new third-party,the Action will fail\nif [[ $result ==\
        \ 0 ]];then echo \"All third dependencies is known!\" ;else exit 1;fi"
name: Build Backend
on:
  repository_dispatch:
    types: trigger-ga___build-backend.yml
