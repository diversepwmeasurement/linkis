env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard
    -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
jobs:
  publish-docker:
    env:
      HUB: ghcr.io/apache/linkis
      LINKIS_VERSION: 1.5.0
      SKIP_TEST: true
      TAG: ${{ github.sha }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: 8
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - continue-on-error: true
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - continue-on-error: true
      name: Build frontend by node.js
      run: 'cd linkis-web

        sed -i "/VUE_APP_MN_CONFIG_PREFIX/d" .env

        npm install

        npm run build

        '
    - continue-on-error: true
      name: Build backend by maven
      run: './mvnw install -Pdocker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true
        -Dlinkis.build.web=true -Dlinkis.build.ldh=true

        '
    - continue-on-error: true
      name: Log in to the Container registry
      uses: docker/login-action@v1.10.0
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ${{ env.HUB }}
        username: ${{ github.actor }}
    - continue-on-error: true
      env:
        DOCKER_VERSION: ${{ github.ref_name }}-${{ github.sha }}
      name: Push Docker Image
      run: 'docker images

        docker tag linkis:${{ env.LINKIS_VERSION }} ${{ env.HUB }}/linkis:${{ env.DOCKER_VERSION
        }}

        docker push ${{ env.HUB }}/linkis:${{ env.DOCKER_VERSION }}


        docker tag linkis:${{ env.LINKIS_VERSION }} ${{ env.HUB }}/linkis:latest

        docker push ${{ env.HUB }}/linkis:latest


        docker tag linkis-web:${{ env.LINKIS_VERSION }} ${{ env.HUB }}/linkis-web:${{
        env.DOCKER_VERSION }}

        docker push ${{ env.HUB }}/linkis-web:${{ env.DOCKER_VERSION }}


        docker tag linkis-web:${{ env.LINKIS_VERSION }} ${{ env.HUB }}/linkis-web:latest

        docker push ${{ env.HUB }}/linkis-web:latest


        docker tag linkis-ldh:${{ env.LINKIS_VERSION }} ${{ env.HUB }}/linkis-ldh:${{
        env.DOCKER_VERSION }}

        docker push ${{ env.HUB }}/linkis-ldh:${{ env.DOCKER_VERSION }}


        docker tag linkis-ldh:${{ env.LINKIS_VERSION }} ${{ env.HUB }}/linkis-ldh:latest

        docker push ${{ env.HUB }}/linkis-ldh:latest

        '
    strategy:
      matrix:
        node-version:
        - 16.0.0
    timeout-minutes: 90
name: Publish Docker
on:
  repository_dispatch:
    types: trigger-ga___publish-docker.yaml
